organism = 2 # 1: human, 2: mouse
pp_human_file = c(
'~/Projects/data/fh_cells/human_phosphoproteomics/b1368p100_phosho_human_processed.tab',
'~/Projects/data/fh_cells/mouse_phosphoproteomics/b1368p100_phosho_mouse_processed.tab'
)[organism]
tp_human_file = c(
'~/Projects/data/fh_cells/human_proteomics/b1368p100_protein_human_processed.tab',
'~/Projects/data/fh_cells/mouse_proteomics/b1368p100_protein_mouse_processed.tab'
)[organism]
pp_result_file = c(
'~/Projects/projects/pymist/resources/fh_cells/b1368p100_phospho_human_limma.tsv',
'~/Projects/projects/pymist/resources/fh_cells/b1368p100_phospho_mouse_limma.tsv'
)[organism]
tp_result_file = c(
'~/Projects/projects/pymist/resources/fh_cells/b1368p100_protein_human_limma.tsv',
'~/Projects/projects/pymist/resources/fh_cells/b1368p100_protein_mouse_limma.tsv'
)[organism]
# Import data-sets
pp <- read.table(pp_human_file, sep='\t', header=T, stringsAsFactors=F, check.names=F)
tp <- read.table(tp_human_file, sep='\t', header=T, stringsAsFactors=F, check.names=F)
# ---- Phosphoproteomics
# Preprocess data-set
pp_ss <- pp[,1:3]
pp <- pp[,-(1:3)]
# Run differential analysis
pp_design <- cbind(KO=rep(c(1,0), each=6), WT=rep(c(0,1), each=6))
pp_fit <- lmFit(pp, pp_design)
pp_cont_matrix <- makeContrasts(KOvsWT=KO/WT, levels=pp_design)
pp_fit_2 <- contrasts.fit(pp_fit, pp_cont_matrix)
pp_fit_2 <- eBayes(pp_fit_2)
pp_result <- as.data.frame(topTable(pp_fit_2, adjust.method='fdr', n=Inf))
pp_result <- cbind(pp_ss[rownames(pp_result),], pp_result)
pp_result$p.value.log10 <- -log10(pp_result$adj.P.Val)
head(pp_result)
head(pp_result, 20)
head(pp_result, 30)
head(pp_result, 40)
head(pp_result, 60)
head(pp_result,100)
tail(pp_result,100)
library(limma)
# Files paths
organism = 2 # 1: human, 2: mouse
pp_human_file = c(
'~/Projects/data/fh_cells/human_phosphoproteomics/b1368p100_phosho_human_processed.tab',
'~/Projects/data/fh_cells/mouse_phosphoproteomics/b1368p100_phosho_mouse_processed.tab'
)[organism]
tp_human_file = c(
'~/Projects/data/fh_cells/human_proteomics/b1368p100_protein_human_processed.tab',
'~/Projects/data/fh_cells/mouse_proteomics/b1368p100_protein_mouse_processed.tab'
)[organism]
pp_result_file = c(
'~/Projects/projects/pymist/resources/fh_cells/b1368p100_phospho_human_limma.tsv',
'~/Projects/projects/pymist/resources/fh_cells/b1368p100_phospho_mouse_limma.tsv'
)[organism]
tp_result_file = c(
'~/Projects/projects/pymist/resources/fh_cells/b1368p100_protein_human_limma.tsv',
'~/Projects/projects/pymist/resources/fh_cells/b1368p100_protein_mouse_limma.tsv'
)[organism]
# Import data-sets
pp <- read.table(pp_human_file, sep='\t', header=T, stringsAsFactors=F, check.names=F)
tp <- read.table(tp_human_file, sep='\t', header=T, stringsAsFactors=F, check.names=F)
# ---- Phosphoproteomics
# Preprocess data-set
pp_ss <- pp[,1:3]
pp <- pp[,-(1:3)]
# Run differential analysis
pp_design <- cbind(KO=rep(c(1,0), each=6), WT=rep(c(0,1), each=6))
pp_fit <- lmFit(pp, pp_design)
pp_cont_matrix <- makeContrasts(KOvsWT=KO-WT, levels=pp_design)
pp_fit_2 <- contrasts.fit(pp_fit, pp_cont_matrix)
pp_fit_2 <- eBayes(pp_fit_2)
pp_result <- as.data.frame(topTable(pp_fit_2, adjust.method='fdr', n=Inf))
pp_result <- cbind(pp_ss[rownames(pp_result),], pp_result)
pp_result$p.value.log10 <- -log10(pp_result$adj.P.Val)
head(pp_result)
library(limma)
# Files paths
organism = 2 # 1: human, 2: mouse
pp_human_file = c(
'~/Projects/data/fh_cells/human_phosphoproteomics/b1368p100_phosho_human_processed.tab',
'~/Projects/data/fh_cells/mouse_phosphoproteomics/b1368p100_phosho_mouse_processed.tab'
)[organism]
tp_human_file = c(
'~/Projects/data/fh_cells/human_proteomics/b1368p100_protein_human_processed.tab',
'~/Projects/data/fh_cells/mouse_proteomics/b1368p100_protein_mouse_processed.tab'
)[organism]
pp_result_file = c(
'~/Projects/projects/pymist/resources/fh_cells/b1368p100_phospho_human_limma.tsv',
'~/Projects/projects/pymist/resources/fh_cells/b1368p100_phospho_mouse_limma.tsv'
)[organism]
tp_result_file = c(
'~/Projects/projects/pymist/resources/fh_cells/b1368p100_protein_human_limma.tsv',
'~/Projects/projects/pymist/resources/fh_cells/b1368p100_protein_mouse_limma.tsv'
)[organism]
# Import data-sets
pp <- read.table(pp_human_file, sep='\t', header=T, stringsAsFactors=F, check.names=F)
tp <- read.table(tp_human_file, sep='\t', header=T, stringsAsFactors=F, check.names=F)
# ---- Phosphoproteomics
# Preprocess data-set
pp_ss <- pp[,1:3]
pp <- pp[,-(1:3)]
# Run differential analysis
pp_design <- cbind(KO=rep(c(1,0), each=6), WT=rep(c(0,1), each=6))
pp_fit <- lmFit(pp, pp_design)
pp_cont_matrix <- makeContrasts(KOvsWT=KO-WT, levels=pp_design)
pp_fit_2 <- contrasts.fit(pp_fit, pp_cont_matrix)
pp_fit_2 <- eBayes(pp_fit_2)
pp_result <- as.data.frame(topTable(pp_fit_2, adjust.method='fdr', n=Inf))
pp_result <- cbind(pp_ss[rownames(pp_result),], pp_result)
pp_result$p.value.log10 <- -log10(pp_result$adj.P.Val)
library(limma)
# Files paths
organism = 1 # 1: human, 2: mouse
pp_human_file = c(
'~/Projects/data/fh_cells/human_phosphoproteomics/b1368p100_phosho_human_processed.tab',
'~/Projects/data/fh_cells/mouse_phosphoproteomics/b1368p100_phosho_mouse_processed.tab'
)[organism]
tp_human_file = c(
'~/Projects/data/fh_cells/human_proteomics/b1368p100_protein_human_processed.tab',
'~/Projects/data/fh_cells/mouse_proteomics/b1368p100_protein_mouse_processed.tab'
)[organism]
pp_result_file = c(
'~/Projects/projects/pymist/resources/fh_cells/b1368p100_phospho_human_limma.tsv',
'~/Projects/projects/pymist/resources/fh_cells/b1368p100_phospho_mouse_limma.tsv'
)[organism]
tp_result_file = c(
'~/Projects/projects/pymist/resources/fh_cells/b1368p100_protein_human_limma.tsv',
'~/Projects/projects/pymist/resources/fh_cells/b1368p100_protein_mouse_limma.tsv'
)[organism]
# Import data-sets
pp <- read.table(pp_human_file, sep='\t', header=T, stringsAsFactors=F, check.names=F)
tp <- read.table(tp_human_file, sep='\t', header=T, stringsAsFactors=F, check.names=F)
# ---- Phosphoproteomics
# Preprocess data-set
pp_ss <- pp[,1:3]
pp <- pp[,-(1:3)]
# Run differential analysis
pp_design <- cbind(KO=rep(c(1,0), each=6), WT=rep(c(0,1), each=6))
pp_fit <- lmFit(pp, pp_design)
pp_cont_matrix <- makeContrasts(KOvsWT=KO-WT, levels=pp_design)
pp_fit_2 <- contrasts.fit(pp_fit, pp_cont_matrix)
pp_fit_2 <- eBayes(pp_fit_2)
pp_result <- as.data.frame(topTable(pp_fit_2, adjust.method='fdr', n=Inf))
pp_result <- cbind(pp_ss[rownames(pp_result),], pp_result)
pp_result$p.value.log10 <- -log10(pp_result$adj.P.Val)
head(pp_result)
head(pp_result, 20)
pp_result$logFC
2^pp_result$logFC
boxplot(2^pp_result$logFC)
boxplot(pp_result$logFC)
boxplot(2^pp_result$logFC)
cor.test(2^pp_result$logFC, pp_result$logFC)
cor.test(2^pp_result$logFC, pp_result$logFC, method='spearman')
library(limma)
# Files paths
organism = 1 # 1: human, 2: mouse
pp_human_file = c(
'~/Projects/data/fh_cells/human_phosphoproteomics/b1368p100_phosho_human_processed.tab',
'~/Projects/data/fh_cells/mouse_phosphoproteomics/b1368p100_phosho_mouse_processed.tab'
)[organism]
tp_human_file = c(
'~/Projects/data/fh_cells/human_proteomics/b1368p100_protein_human_processed.tab',
'~/Projects/data/fh_cells/mouse_proteomics/b1368p100_protein_mouse_processed.tab'
)[organism]
pp_result_file = c(
'~/Projects/projects/pymist/resources/fh_cells/b1368p100_phospho_human_limma.tsv',
'~/Projects/projects/pymist/resources/fh_cells/b1368p100_phospho_mouse_limma.tsv'
)[organism]
tp_result_file = c(
'~/Projects/projects/pymist/resources/fh_cells/b1368p100_protein_human_limma.tsv',
'~/Projects/projects/pymist/resources/fh_cells/b1368p100_protein_mouse_limma.tsv'
)[organism]
# Import data-sets
pp <- read.table(pp_human_file, sep='\t', header=T, stringsAsFactors=F, check.names=F)
tp <- read.table(tp_human_file, sep='\t', header=T, stringsAsFactors=F, check.names=F)
# ---- Phosphoproteomics
# Preprocess data-set
pp_ss <- pp[,1:3]
pp <- pp[,-(1:3)]
# Run differential analysis
pp_design <- cbind(KO=rep(c(1,0), each=6), WT=rep(c(0,1), each=6))
pp_fit <- lmFit(pp, pp_design)
pp_cont_matrix <- makeContrasts(KOvsWT=KO-WT, levels=pp_design)
pp_fit_2 <- contrasts.fit(pp_fit, pp_cont_matrix)
pp_fit_2 <- eBayes(pp_fit_2)
pp_result <- as.data.frame(topTable(pp_fit_2, adjust.method='fdr', n=Inf))
pp_result <- cbind(pp_ss[rownames(pp_result),], pp_result)
pp_result$p.value.log10 <- -log10(pp_result$adj.P.Val)
# Store reults
write.table(pp_result, pp_result_file, sep='\t', quote=F, row.names=F)
# ---- Proteomics
# Preprocess data-set
tp_ss <- data.frame(tp[,1:2])
tp <- tp[,-(1:2)]
# Run differential analysis
tp_design <- cbind(KO=rep(c(1,0), each=3), WT=rep(c(0,1), each=3))
tp_fit <- lmFit(tp, tp_design)
tp_cont_matrix <- makeContrasts(KOvsWT=KO-WT, levels=tp_design)
tp_fit_2 <- contrasts.fit(tp_fit, tp_cont_matrix)
tp_fit_2 <- eBayes(tp_fit_2)
tp_result <- as.data.frame(topTable(tp_fit_2, adjust.method='fdr', n=Inf))
tp_result <- cbind(tp_ss[rownames(tp_result), ], tp_result)
tp_result$p.value.log10 <- -log10(tp_result$adj.P.Val)
# Store reults
write.table(tp_result, tp_result_file, sep='\t', quote=F, row.names=F)
library(limma)
# Files paths
organism = 1 # 1: human, 2: mouse
pp_human_file = c(
'~/Projects/data/fh_cells/human_phosphoproteomics/b1368p100_phosho_human_processed.tab',
'~/Projects/data/fh_cells/mouse_phosphoproteomics/b1368p100_phosho_mouse_processed.tab'
)[organism]
tp_human_file = c(
'~/Projects/data/fh_cells/human_proteomics/b1368p100_protein_human_processed.tab',
'~/Projects/data/fh_cells/mouse_proteomics/b1368p100_protein_mouse_processed.tab'
)[organism]
pp_result_file = c(
'~/Projects/projects/pymist/resources/fh_cells/files/b1368p100_phospho_human_limma.tsv',
'~/Projects/projects/pymist/resources/fh_cells/files/b1368p100_phospho_mouse_limma.tsv'
)[organism]
tp_result_file = c(
'~/Projects/projects/pymist/resources/fh_cells/files/b1368p100_protein_human_limma.tsv',
'~/Projects/projects/pymist/resources/fh_cells/files/b1368p100_protein_mouse_limma.tsv'
)[organism]
# Import data-sets
pp <- read.table(pp_human_file, sep='\t', header=T, stringsAsFactors=F, check.names=F)
tp <- read.table(tp_human_file, sep='\t', header=T, stringsAsFactors=F, check.names=F)
# ---- Phosphoproteomics
# Preprocess data-set
pp_ss <- pp[,1:3]
pp <- pp[,-(1:3)]
# Run differential analysis
pp_design <- cbind(KO=rep(c(1,0), each=6), WT=rep(c(0,1), each=6))
pp_fit <- lmFit(pp, pp_design)
pp_cont_matrix <- makeContrasts(KOvsWT=KO-WT, levels=pp_design)
pp_fit_2 <- contrasts.fit(pp_fit, pp_cont_matrix)
pp_fit_2 <- eBayes(pp_fit_2)
pp_result <- as.data.frame(topTable(pp_fit_2, adjust.method='fdr', n=Inf))
pp_result <- cbind(pp_ss[rownames(pp_result),], pp_result)
pp_result$p.value.log10 <- -log10(pp_result$adj.P.Val)
# Store reults
write.table(pp_result, pp_result_file, sep='\t', quote=F, row.names=F)
# ---- Proteomics
# Preprocess data-set
tp_ss <- data.frame(tp[,1:2])
tp <- tp[,-(1:2)]
# Run differential analysis
tp_design <- cbind(KO=rep(c(1,0), each=3), WT=rep(c(0,1), each=3))
tp_fit <- lmFit(tp, tp_design)
tp_cont_matrix <- makeContrasts(KOvsWT=KO-WT, levels=tp_design)
tp_fit_2 <- contrasts.fit(tp_fit, tp_cont_matrix)
tp_fit_2 <- eBayes(tp_fit_2)
tp_result <- as.data.frame(topTable(tp_fit_2, adjust.method='fdr', n=Inf))
tp_result <- cbind(tp_ss[rownames(tp_result), ], tp_result)
tp_result$p.value.log10 <- -log10(tp_result$adj.P.Val)
# Store reults
write.table(tp_result, tp_result_file, sep='\t', quote=F, row.names=F)
library(limma)
# Files paths
organism = 1 # 1: human, 2: mouse
pp_human_file = c(
'~/Projects/data/fh_cells/human_phosphoproteomics/b1368p100_phosho_human_processed.tab',
'~/Projects/data/fh_cells/mouse_phosphoproteomics/b1368p100_phosho_mouse_processed.tab'
)[organism]
tp_human_file = c(
'~/Projects/data/fh_cells/human_proteomics/b1368p100_protein_human_processed.tab',
'~/Projects/data/fh_cells/mouse_proteomics/b1368p100_protein_mouse_processed.tab'
)[organism]
pp_result_file = c(
'~/Projects/projects/pymist/resources/fh_cells/files/b1368p100_phospho_human_limma.tsv',
'~/Projects/projects/pymist/resources/fh_cells/files/b1368p100_phospho_mouse_limma.tsv'
)[organism]
tp_result_file = c(
'~/Projects/projects/pymist/resources/fh_cells/files/b1368p100_protein_human_limma.tsv',
'~/Projects/projects/pymist/resources/fh_cells/files/b1368p100_protein_mouse_limma.tsv'
)[organism]
# Import data-sets
pp <- read.table(pp_human_file, sep='\t', header=T, stringsAsFactors=F, check.names=F)
tp <- read.table(tp_human_file, sep='\t', header=T, stringsAsFactors=F, check.names=F)
# ---- Phosphoproteomics
# Preprocess data-set
pp_ss <- pp[,1:3]
pp <- pp[,-(1:3)]
# Run differential analysis
pp_design <- cbind(KO=rep(c(1,0), each=6), WT=rep(c(0,1), each=6))
pp_fit <- lmFit(pp, pp_design)
pp_cont_matrix <- makeContrasts(KOvsWT=KO-WT, levels=pp_design)
pp_fit_2 <- contrasts.fit(pp_fit, pp_cont_matrix)
pp_fit_2 <- eBayes(pp_fit_2)
pp_result <- as.data.frame(topTable(pp_fit_2, adjust.method='fdr', n=Inf))
pp_result <- cbind(pp_ss[rownames(pp_result),], pp_result)
pp_result$p.value.log10 <- -log10(pp_result$adj.P.Val)
# Store reults
write.table(pp_result, pp_result_file, sep='\t', quote=F, row.names=F)
# ---- Proteomics
# Preprocess data-set
tp_ss <- data.frame(tp[,1:3])
tp <- tp[,-(1:3)]
# Run differential analysis
tp_design <- cbind(KO=rep(c(1,0), each=3), WT=rep(c(0,1), each=3))
tp_fit <- lmFit(tp, tp_design)
tp_cont_matrix <- makeContrasts(KOvsWT=KO-WT, levels=tp_design)
tp_fit_2 <- contrasts.fit(tp_fit, tp_cont_matrix)
tp_fit_2 <- eBayes(tp_fit_2)
tp_result <- as.data.frame(topTable(tp_fit_2, adjust.method='fdr', n=Inf))
tp_result <- cbind(tp_ss[rownames(tp_result), ], tp_result)
tp_result$p.value.log10 <- -log10(tp_result$adj.P.Val)
# Store reults
write.table(tp_result, tp_result_file, sep='\t', quote=F, row.names=F)
load('~/Projects/projects/pymist/resources/fh_cells/files/cami_paper/data1_limmaFC.RData')
limmaEst
head(limmaEst)
load('~/Projects/projects/pymist/resources/fh_cells/files/cami_paper/dataObjects_2_2.RData')
d12.log.dN
head(d12.log.dN)
dim(d12.log.dN)
limma.FCvCtrl.d6.NAr
head(limma.FCvCtrl.d6.NAr)
head(limma.FCvCtrl.d6.pval.NAr)
head(limma.alone.d6.NAr)
head(d12.log.dN)
write.table(limma.FCvCtrl.d6.NAr, '~/Projects/projects/pymist/resources/fh_cells/files/cami_paper/limma_logfc.tab', sep='\t', quote=F)
load('~/Downloads/data2.Rdata')
limma.FCvCtrl.d6.NAr
GMM.res.ID.2
head(GMM.res.ID.2)
load('~/Projects/data/sanger/methylation/PANCAN_informative.rdata')
write.table(PC_tBEM, '~/Projects/data/tcga/methylation/pancan_informative_islands.tab', sep='\t', quote=F)
t.test(2, 3)
?t.test
t.test([1], [2])
t.test(c(1), c(2)
)
t.test(c(1), c(2,3,4))
t.test(c(2,3,4))
load('~/Projects/data/sanger/drugs/DRUG_ANALYSIS_SET_20150123.rdata')
DRUG_ANALYSIS_SET
head(DRUG_ANALYSIS_SET)
write.table(DRUG_ANALYSIS_SET, '~/Projects/data/sanger/drugs/drug_samplesheet.tab', sep='/t', quote=F, row.names = F)
write.table(DRUG_ANALYSIS_SET, '~/Projects/data/sanger/drugs/drug_samplesheet.tab', sep='\t', quote=F, row.names = F)
load('~/Downloads/marti/CH003.RData')
head(PatientResults)
head(PatientResults$AllNwsPatient)
write.table(PatientResults$AllNwsPatient, '~/Downloads/marti/table.tab', sep='\t', quote=F)
wGSEA<-function(ranking,norm_express,signature,p=1,display=TRUE,returnRS=FALSE,significance=FALSE,trial=1000){
signature<-unique(intersect(signature,ranking))
HITS<-is.element(ranking,signature)+0
R<-norm_express*HITS
hitCases<-cumsum(abs(R)^p)
NR<-sum(abs(R)^p)
missCases<-cumsum(1-HITS)
N<-length(ranking)
N_Nh<-length(ranking)-length(signature)
Phit<-hitCases/NR
Pmiss<-missCases/N_Nh
m<-max(abs(Phit-Pmiss))
t<-which(abs(Phit-Pmiss)==m)
if (length(t)>1){t<-t[1]}
peak<-t
ES<-Phit[t]-Pmiss[t]
RS<-Phit-Pmiss
names(ES)<-NULL
if (display){
if (ES>=0){c<-"red"}else{c<-"green"}
plot(0:N,c(0,Phit-Pmiss),col=c,type="l",xlim=c(0,N),ylim=c(-(abs(ES)+0.5*(abs(ES))),abs(ES)+0.5*(abs(ES))),xaxs="i",bty="l",axes=FALSE,
xlab="Gene Rank Position",ylab="Running Sum")
par(new=TRUE)
plot(0:N,rep(0,N+1),col='gray',type="l",new=FALSE,xlab="",ylab="",ylim=c(-(abs(ES)+0.5*(abs(ES))),abs(ES)+0.5*(abs(ES))))
axis(side=2)
}
P<-NA
if(significance){
EMPES<-computeSimpleEMPES(ranking,norm_express,signature,trial)
P<-(ES>=0)*(length(which(EMPES>=ES))/trial)+(ES<0)*(length(which(EMPES<=ES))/trial)
}
if (returnRS){
POSITIONS<-which(HITS==1)
names(POSITIONS)<-ranking[which(HITS==1)]
POSITIONS<-POSITIONS[order(names(POSITIONS))]
names(POSITIONS)<-names(POSITIONS)[order(names(POSITIONS))]
return(list(ES=ES,RS=RS,POSITIONS=POSITIONS,PEAK=t))
} else {if (significance) return(list(ES=ES,P=P))
else return(ES)}
}
computeSimpleEMPES<-function(ranking,exp_value_profile,signature,trials){
ngenes<-length(ranking)
siglen<-length(intersect(signature,ranking))
ES<-rep(NA,trials)
for (i in 1:trials){
shuffled_signature<-ranking[sample(1:ngenes,siglen)]
tmp<-wGSEA(ranking,exp_value_profile,shuffled_signature,display=FALSE,significance=FALSE)
ES[i]<-tmp
}
return(ES)
}
dataset <- read.csv('~/Downloads/test_dataset.csv')
dataset
dataset <- read.table('~/Downloads/test_dataset.csv', row.names = 1)
dataset
dataset <- read.table('~/Downloads/test_dataset.csv', row.names = T)
dataset <- read.table('~/Downloads/test_dataset.csv', sep=',', row.names = 1)
dataset
head(dataset)
head(sort(dataset)
)
sort(dataset)
sort(dataset$V2)
order(dataset$V2)
dataset[order(dataset$V2),]
dataset[order(dataset$V2)]
d_order = order(dataset$V2)
wGSEA(rownames(dataset)[d_order], dataset)
rownames(dataset)[d_order]
dataset$V2[d_order]
wGSEA(rownames(dataset)[d_order], dataset$V2[d_order], significance = T)
wGSEA(rownames(dataset)[d_order], dataset$V2[d_order], c('YMR202W'), significance = T)
library(limma)
# Files paths
organism = 2 # 1: human, 2: mouse
tp_human_file = c(
'/Users/emanuel/Projects/projects/frezza_fh/tables/protein_human_processed.tab',
'/Users/emanuel/Projects/projects/frezza_fh/tables/protein_mouse_processed.tab'
)[organism]
tp_result_file = c(
'/Users/emanuel/Projects/projects/frezza_fh/tables/protein_human_limma.tab',
'/Users/emanuel/Projects/projects/frezza_fh/tables/protein_mouse_limma.tab'
)[organism]
# Import data-sets
tp <- read.table(tp_human_file, sep='\t', row.names=1, header=T, stringsAsFactors=F, check.names=F)
# ---- Proteomics
# Run differential analysis
tp_design <- cbind(KO=rep(c(1,0), each=3), WT=rep(c(0,1), each=3))
tp_fit <- lmFit(tp, tp_design)
tp_cont_matrix <- makeContrasts(KOvsWT=KO-WT, levels=tp_design)
tp_fit_2 <- contrasts.fit(tp_fit, tp_cont_matrix)
tp_fit_2 <- eBayes(tp_fit_2)
tp_result <- as.data.frame(topTable(tp_fit_2, adjust.method='fdr', n=Inf))
tp_result$p.value.log10 <- -log10(tp_result$adj.P.Val)
# Store reults
write.table(tp_result, tp_result_file, sep='\t', quote=F)
source("http://bioconductor.org/biocLite.R")
biocLite("BioNet")
source('~/.active-rstudio-document')
library(BioNet)library(DLBCL)data(dataLym)data(interactome)
library(BioNet)
library(DLBCL)
install.packages(DLBCL)
source("http://bioconductor.org/biocLite.R")
biocLite("DLBCL")
library(DLBCL)
data(dataLym)
data(interactome)
dataLym
head(dataLym)
head(interactome)
interactome
pvals <- cbind(t = dataLym$t.pval, s = dataLym$s.pval)
rownames(pvals) <- dataLym$label
pval <- aggrPvals(pvals, order = 2, plot = FALSE)
pval
subnet <- subNetwork(dataLym$label, interactome)subnet <- rmSelfLoops(subnet)subnet
subnet <- subNetwork(dataLym$label, interactome)
subnet <- rmSelfLoops(subnet)
subnet
fb <- fitBumModel(pval, plot = FALSE)
scores <- scoreNodes(subnet, fb, fdr = 0.001)
scores
module <- runFastHeinz(subnet, scores)
logFC <- dataLym$diffnames(logFC) <- dataLym$label
logFC <- dataLym$diff
names(logFC) <- dataLym$label
logFC
plotModule(module, scores = scores, diff.expr = logFC)
?runFastHeinz
module <- runHeinz(subnet, scores)
library(BioNet)library(DLBCL)# Configure workplacesetwd('~/Projects/projects/liverx/src/liverx/r/')# Import data-setdataset <- read.csv('~/Projects/projects/liverx/data/result_swath_v2.3.7_fRfS.csv')# Import networknetwork <- loadNetwork.tab('~/Projects/projects/liverx/files/genemania_mouse_network_filtered.txt', header=T, directed=F, format='graphNEL')# Sub-network for conditionconditions <- c('(B6_T2_fed-B6_T1_fed) - (S9_T2_fed-S9_T1_fed)', '(B6_T2_fed-B6_T0_fed ) - (S9_T2_fed-S9_T0_fed)')
library(BioNet)
library(DLBCL)
# Configure workplace
setwd('~/Projects/projects/liverx/src/liverx/r/')
# Import data-set
dataset <- read.csv('~/Projects/projects/liverx/data/result_swath_v2.3.7_fRfS.csv')
# Import network
network <- loadNetwork.tab('~/Projects/projects/liverx/files/genemania_mouse_network_filtered.txt', header=T, directed=F, format='graphNEL')
# Sub-network for condition
conditions <- c('(B6_T2_fed-B6_T1_fed) - (S9_T2_fed-S9_T1_fed)', '(B6_T2_fed-B6_T0_fed ) - (S9_T2_fed-S9_T0_fed)')apply(dataset, function(row) {  if (dataset['Label'] %in% conditions)    row})
conditions <- c('(B6_T2_fed-B6_T1_fed) - (S9_T2_fed-S9_T1_fed)', '(B6_T2_fed-B6_T0_fed ) - (S9_T2_fed-S9_T0_fed)')apply(dataset, function(row) {  if (dataset['Label'] %in% conditions)    row})
conditions <- c('(B6_T2_fed-B6_T1_fed) - (S9_T2_fed-S9_T1_fed)', '(B6_T2_fed-B6_T0_fed ) - (S9_T2_fed-S9_T0_fed)')apply(dataset, function(row) {  if (dataset['Label'] %in% conditions)    row})
conditions <- c('(B6_T2_fed-B6_T1_fed) - (S9_T2_fed-S9_T1_fed)', '(B6_T2_fed-B6_T0_fed ) - (S9_T2_fed-S9_T0_fed)')apply(dataset, function(row) {  if (dataset['Label'] %in% conditions)    row})
conditions <- c('(B6_T2_fed-B6_T1_fed) - (S9_T2_fed-S9_T1_fed)', '(B6_T2_fed-B6_T0_fed ) - (S9_T2_fed-S9_T0_fed)')
apply(dataset, function(row) {
if (dataset['Label'] %in% conditions)
row
})
apply(dataset, function(row) {  if (row['Label'] %in% conditions)    row})
apply(dataset, 1, function(row) {  if (row['Label'] %in% conditions)    row})
apply(dataset, 1, function(row) {  if (row['Label'] %in% conditions)    row})
?apply
apply(dataset, 1, function(row) {  if (row['Label'] %in% conditions)    row})
apply(dataset, 1, function(row) {
if (row['Label'] %in% conditions)
row
})
na.omit(rbind(apply(dataset, 1, function(row) {  if (row['Label'] %in% conditions)    row})))
na.omit(rbind(apply(dataset, 1, function(row) {  if (row['Label'] %in% conditions)    row})))
na.omit(rbind(apply(dataset, 1, function(row) {  if (row['Label'] %in% conditions)    row})))
na.omit(rbind(apply(dataset, 1, function(row) {  if (row['Label'] %in% conditions)    row})))
na.omit(rbind(apply(dataset, 1, function(row) {  if (row['Label'] %in% conditions)    row})))
na.omit(rbind(apply(dataset, 1, function(row) {  if (row['Label'] %in% conditions)    row})))
na.omit(rbind(apply(dataset, 1, function(row) {  if (row['Label'] %in% conditions)    row})))
